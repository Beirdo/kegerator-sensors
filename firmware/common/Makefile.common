.PHONY:	force

CC = avr-gcc
OBJDUMP = avr-objdump
OBJCOPY = avr-objcopy
AVRDUDE = avrdude

INCS = -I . -I ../common
LDFLAGS = -Wl,-Map,${MAP}
CFLAGS = -g -O3 -Wall -Werror -mmcu=${CPU}
AVRDUDEOPTS = -c buspirate -P /dev/buspirate -p ${PROGCPU} -v

OBJS = ${COMMONSRCS:../common/%.c=%.o} ${SRCS:%.c=%.o}

ELF  = ${PRG}.elf
MAP  = ${PRG}.map
DISS = ${OBJS:%.o=%.dis} ${ELF:%.elf=%.dis}
HEX  = flash.hex eeprom.hex
FUSES = lfuse.txt hfuse.txt efuse.txt

all:	${HEX} ${FUSES}

flash.hex:	${ELF}
	${OBJCOPY} -j .text -j .data -O ihex $+ $@
	
eeprom.hex:	${ELF}
	${OBJCOPY} -j .eeprom --change-section-lma .eeprom=0 -O binary $+ \
		eeprom.bin 
	if [ -s eeprom.bin ] ; then \
		${OBJCOPY} -j .eeprom --change-section-lma .eeprom=0 -O ihex \
			$+ $@ ; \
	else \
		cat /dev/null > $@ ; \
	fi


%.o:	../common/%.c
	${CC} ${CFLAGS} ${INCS} -c $+ -o $@

%.o:	%.c
	${CC} ${CFLAGS} ${INCS} -c $+ -o $@

%.dis:	%.o
	${OBJDUMP} -Sx $+ > $@

%.dis:	%.elf
	${OBJDUMP} -Sx $+ > $@

${ELF}:	${OBJS}
	${CC} ${CFLAGS} ${LDFLAGS} $^ -o $@

fuses.dis:	${ELF}
	${OBJDUMP} -S -j .fuse $+ > $@

lfuse.txt:	fuses.dis
	../common/extract-fuse.sh 1 < $+ > $@

hfuse.txt:	fuses.dis
	../common/extract-fuse.sh 2 < $+ > $@

efuse.txt:	fuses.dis
	../common/extract-fuse.sh 3 < $+ > $@

version.c:	force
	../common/mkversion.sh

clean:
	${RM} ${OBJS} ${DISS} ${ELF} version.c ${HEX} eeprom.bin \
		${MAP} ${FUSES} fuses.dis

program-check:
	avrdude ${AVRDUDEOPTS}

program:	${HEX} ${FUSES}
	if [ -s eeprom.bin ] ; then \
		avrdude ${AVRDUDEOPTS} -U flash:w:flash.hex:i \
			-U eeprom:w:eeprom.hex:i ; \
	else \
		avrdude ${AVRDUDEOPTS} -U flash:w:flash.hex:i ; \
	fi

program-fuses:
	if [ -s efuse.txt ] ; then \
		avrdude ${AVRDUDEOPTS} -u -U lfuse:w:0x`cat lfuse.txt`:m \
			-u -U hfuse:w:0x`cat hfuse.txt`:m \
			-u -U efuse:w:0x`cat efuse.txt`:m ; \
	else \
		avrdude ${AVRDUDEOPTS} -u -U lfuse:w:0x`cat lfuse.txt`:m \
			-u -U hfuse:w:0x`cat hfuse.txt`:m ; \
	fi
